pub def join(l: List{Str}, s: Str): Str
  if l.len() == 0
    return ""
  elif l.len() == 1
    return l[0]
  end
  let r = l[0]
  const last = l.len() - 1
  let i = 1
  while i < last
    r = r <> s <> l[i]
    i += 1
  end
  return r <> s <> l[-1]
end

pub def count{T}(l: List{T}, s: T): Num
  let r = 0
  for e in l
    if e == s
      r += 1
    end
  end
  return r
end

pub def find{T}(l: List{T}, s: T): Maybe{Num}
  for i, e in l
    if e == s
      return Just(i)
    end
  end
  return None
end

pub def remove{T}(l: List{T}, s: T): Bool
  for i, e in l
    if e == s
      return l.remove(i)
    end
  end
  return False
end


pub def count_with{T}(l: List{T}, check: fn(T): Bool): Num
  let r = 0
  for e in l
    if check(e)
      r += 1
    end
  end
  return r
end

pub def find_with{T}(l: List{T}, check: fn(T): Bool): Maybe{Num}
  for i, e in l
    if check(e)
      return Just(i)
    end
  end
  return None
end

pub def remove_with{T}(l: List{T}, check: fn(T): Bool): Bool
  for i, e in l
    if check(e)
      return l.remove(i)
    end
  end
  return False
end
