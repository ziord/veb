pub type Foo = A | B
pub type Cmp{T, U} = Car(T) | Plane(U)
pub alias Q = Cmp{num, str}

pub trait Foldable{T, U}
  pub def fold_right(x: U): U;
  pub def fold_left(x: T): T;
end

pub class Fox
  x = 0
  y = 2
  pub def fun()
    self.x += self.y + 2
    self.x *= self.y
    return (self.x, self.y)
  end
end
