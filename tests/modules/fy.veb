import fx
import fc
import fb
import fa
let x: fx.Foo = fx.Foo.B
println(x)

println(fa.CAPITAL)
println(fb.b.CAPITAL)
for i, j in fc.sc.range(1, Just(12), Just(3))
  println(i, j)
end

def fun(a: fx.Foo, b: fx.Foo): fx.Cmp{Num, Str}
  println(a, b)
  return fx.Car('o_o'.len())
end

fun(x, fx.A) |> println

let j: fx.Cmp{Num, Str} = fx.Plane('yes')
println(j)
j = fx.Car(12)
println(j)

type Funk = A(Str) | B(Num)
let k: A = A('ok')
println(k)

class MyFold : fx.Foldable{Num, Str}
  pub def fold_right(x: Str)
    return x <> '^_^' <> x
  end

  pub def fold_left(x: Num)
    return x << 1
  end
end

MyFold().fold_right('oopsla') |> println
MyFold().fold_left('oopsla'.len()) |> println

fx.Fox().fun() |> println

let j: fx.Q.Plane = fx.Plane('yes')
println(j)
